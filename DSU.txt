class DSU{
public:
	vector<int> parent, size;
	DSU(int n){
		for(int i = 0; i < n; ++i){
			parent.push_back(i);
			size.push_back(1);
		}
	}
	int find(int u){
		if(u == parent[u]) return u;
		return parent[u] = find(parent[u]);
	}	
	void unions(int u, int v){
		u = find(u);
		v = find(v);
		if(u != v){
			if(size[u] < size[v]){
				parent[u] = v;
				size[v] += size[u];
			}
			else{
				parent[v] = u;
				size[u] += size[v];
			}
		}
	}
};